import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as c,c as l,a as n,d as e,b as s,e as t}from"./app.c178dd79.js";const i={},r=n("h2",{id:"jupyter-notebook\u7684\u73AF\u5883\u914D\u7F6E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jupyter-notebook\u7684\u73AF\u5883\u914D\u7F6E","aria-hidden":"true"},"#"),s(" Jupyter Notebook\u7684\u73AF\u5883\u914D\u7F6E")],-1),u=s("\u9996\u5148\u9700\u8981\u4E0B\u8F7D\u5B89\u88C5"),d={href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"},k=s("Anaconda"),v=t(`<p>\u7531\u4E8E\u6211\u73B0\u5728\u4F7F\u7528\u7684\u6700\u65B0\u7248\u672CAnaconda\u81EA\u5E26\u7684Python\u7248\u672C\u662F3.8.5\uFF0C\u800C\u622A\u6B62\u5230\u5199\u4F5C\u8FD9\u7BC7\u6587\u7AE0\u7684\u65F6\u5019\uFF0CTensorFlow\u53EA\u652F\u63013.5.X,3.6.X,3.7.X\u7248\u672C\u7684Python\uFF0C\u6240\u4EE5\u5B89\u88C5TensorFlow\u65F6\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0Python 3.7\u7684\u73AF\u5883</p><p>\u521B\u5EFA\u540D\u4E3Atensorflow\u7684python\u4E3A3.7\u7684\u73AF\u5883</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>conda create <span class="token operator">-</span>n tensorflow python=3<span class="token punctuation">.</span>7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6FC0\u6D3B\u65B0\u521B\u5EFA\u7684\u73AF\u5883</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>conda activate tensorflow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6211\u53EA\u9700\u8981tensorflow,\u6240\u4EE5\u8FD9\u91CC\u53EA\u5B89\u88C5tensorflow\uFF0C\u9700\u8981\u5176\u4ED6\u5305\u53EF\u4EE5\u81EA\u884Cconda\u6216\u8005pip\u5B89\u88C5</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>conda install tensorflow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B89\u88C5jupyter</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>conda install ipython
conda install jupyter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u542F\u52A8notebook</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>jupyter notebook
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528tensorflow" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528tensorflow" aria-hidden="true">#</a> \u4F7F\u7528TensorFlow</h2>`,12),m=s("\u4E0B\u9762\u662Fnotebook\u4E0A\u7684\u64CD\u4F5C\uFF0C\u53C2\u8003\u4E86\u5B98\u7F51\u7684"),h={href:"https://tensorflow.google.cn/tutorials/quickstart/beginner?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},b=s("\u65B0\u624B\u6559\u7A0B"),g=t(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>mnist <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>mnist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span> <span class="token operator">=</span> mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
x_train<span class="token punctuation">,</span> x_test <span class="token operator">=</span> x_train <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span> x_test <span class="token operator">/</span> <span class="token number">255.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz
11493376/11490434 [==============================] - 102s 9us/step
</code></pre><p>\u4E0A\u9762\u8FD9\u4E00\u6B65\u7531\u4E8E\u9700\u8981\u4ECEgoogle\u4E0B\u8F7D\u6570\u636E\uFF0C\u9700\u8981\u8FDE\u63A5\u5916\u7F51</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
  tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;softmax&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token operator">=</span><span class="token string">&#39;adam&#39;</span><span class="token punctuation">,</span>
              loss<span class="token operator">=</span><span class="token string">&#39;sparse_categorical_crossentropy&#39;</span><span class="token punctuation">,</span>
              metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;accuracy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>Epoch 1/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.2979 - accuracy: 0.9137
Epoch 2/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.1435 - accuracy: 0.9573
Epoch 3/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.1071 - accuracy: 0.9677
Epoch 4/5
1875/1875 [==============================] - 5s 3ms/step - loss: 0.0888 - accuracy: 0.9728
Epoch 5/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.0750 - accuracy: 0.9764





&lt;tensorflow.python.keras.callbacks.History at 0x7fa24c207510&gt;
</code></pre><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>model<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>  y_test<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>313/313 - 0s - loss: 0.0764 - accuracy: 0.9749





[0.07642737776041031, 0.9749000072479248]
</code></pre><p>\u4EE5\u4E0A\u4E3A\u5728jypyter\u4E2D\u4F7F\u7528Tensorflow\u7684\u6559\u7A0B\uFF0C\u7531\u4E8E\u672C\u4EBA\u662F\u7B2C\u4E00\u6B21\u4F7F\u7528python\u548Canaconda\u4EE5\u53CAtensorflow\uFF0C\u6559\u7A0B\u4E2D\u6709\u4E0D\u8DB3\u4E4B\u5904\u8FD8\u8BF7\u8C05\u89E3\u3002</p>`,12);function y(_,f){const a=p("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[u,n("a",d,[k,e(a)])]),v,n("p",null,[m,n("a",h,[b,e(a)])]),g])}var E=o(i,[["render",y],["__file","2020-09-11-use TensorFlow in Jupyter Notebook.html.vue"]]);export{E as default};
